
run-playbook() {
  book=$1
  tenant=$2

  if [[ -z "$book" && -z "$tenant" ]]; then
    echo "Usage: \n run-playbook <playbook> <tenant> [--options]"
    return 255
  fi
  
  shift 2
  ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook ${book}.yml --inventory-file=site/${tenant}/inventory --extra-vars="site=$PWD/site/${tenant}/site/site" --user=msysdeploy --private-key=~/.ssh/ecbuild $@
}

_get_tenant_folder() {
  case $1 in
    p) tenant=consolidated-prd;;
    s) tenant=consolidated-stg;;
    t) tenant=consolidated-tst;;
    eu) tenant=consolidated-eu;;
    *) tenant=spe-$1;;
  esac;

  echo $ANSIBLE_ENV_PATH/$tenant
}

cass() {
  cqlsh $(parse-inv -f $(_get_tenant_folder $1)/inventory/cassandra cassandra | head -n 1)
}

vert() {
  vsql -h `parse-inv -f $(_get_tenant_folder $1)/inventory/cluster vertica | head -n 1` -U dbadmin
}

t-val(){
  case $1 in
    p) ex_path=tenants/spc/site.yml;;
    s) ex_path=tenants/spcstg/site.yml;;
    t) ex_path=tenants/spcuat/site.yml;;
    eu) ex_path=tenants/spe-eudemo/site.yml;;
    *) ex_path=site/site.yml;;
  esac;

  echo $(cat $(_get_tenant_folder $1)/$ex_path | js-yaml | jq -r ".[\"$2\"]")
}

api-key() {
  echo `g-t-v $1 app_smoke_api_key`
}

api-host() {
  echo `g-t-v $1 api_host`
}

t-curl() {
  tenant=$1
  endpoint=$2
  shift 2
  
  curl -H "Content-Type: application/json" -H "Authorization: $(api-key $tenant)" https://$(api-host $tenant)/api/v1/${endpoint} $@
}

hp () {
  cd $ANSIBLE_ENV_PATH/..
  hg pull -u
  hg pull -R site
}

hu () {
  hg up $1
  hg up $1 -R site
}
